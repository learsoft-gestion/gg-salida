// package src

// import (
// 	"database/sql"
// 	"fmt"
// 	"strconv"
// 	"strings"

// 	"github.com/xuri/excelize/v2"
// )

// func CargarPlantilla(nombreSalida string, fileNuevo *excelize.File, db *sql.DB, idLogDetalle int, nombreHoja string) {

// 	fileNuevo.SetSheetName("Sheet1", nombreHoja)

// 	// Escribir encabezados en el Excel
// 	for colIndex, columna := range primeraFila {
// 		columnaMin := strings.ToLower(columna)
// 		colLetter, _ := excelize.ColumnNumberToName(colIndex + 1)
// 		cell := colLetter + "1"
// 		f.SetCellValue(sheetName, cell, columnaMin)
// 	}

// 	// err := fileNuevo.SetRowStyle(sheetName, 1, 10, estilos[1])
// 	// if err != nil {
// 	// 	return err
// 	// }

// 	// Escribir datos en el archivo Excel
// 	for rowIndex, persona := range data { // row ----> 1 Gabi CABA 27
// 		for colIndex, columna := range primeraFila {
// 			columnaMin := strings.ToLower(columna)
// 			colLetter, _ := excelize.ColumnNumberToName(colIndex + 1)
// 			cell := colLetter + strconv.Itoa(rowIndex+2)
// 			valor, ok := persona[columnaMin]
// 			if ok {
// 				f.SetCellValue(sheetName, cell, valor)
// 			}
// 			// fmt.Printf("sheetName: %s cell: %s value: %s\n", sheetName, cell, valor)
// 		}
// 	}

// 	// Guardar archivo
// 	if err = f.SaveAs(proceso.NombreSalida); err != nil {
// 		ManejoErrores(db, idLogDetalle, proceso.Nombre, err)
// 	}
// }

// func LeerPlantilla(nombreProceso string, db *sql.DB, idLogDetalle int) (*excelize.File, error) {
// 	// Construir path
// 	path := fmt.Sprintf("../templates/%s.xlsx", nombreProceso)

// 	// Abrir archivo Excel
// 	f, err := excelize.OpenFile(path)
// 	if err != nil {
// 		ManejoErrores(db, idLogDetalle, nombreProceso, err)
// 	}

// 	// Nombre de la hoja
// 	sheetName := f.GetSheetName(0)

// 	// Obtener las celdas de la primera fila
// 	filas, err := f.GetRows(sheetName)
// 	if err != nil {
// 		ManejoErrores(db, idLogDetalle, nombreProceso, err)
// 	}
// 	fileNuevo := excelize.NewFile()

// 	// var estilos []int
// 	for i := range filas[0] {
// 		colLetter, _ := excelize.ColumnNumberToName(i + 1)
// 		cell := colLetter + "1"
// 		styles, err := f.GetCellStyle(sheetName, cell)
// 		if err != nil {
// 			ManejoErrores(db, idLogDetalle, nombreProceso, err)
// 		}
// 		estilo, err := f.GetStyle(styles)
// 		if err != nil {
// 			ManejoErrores(db, idLogDetalle, nombreProceso, err)
// 		}
// 		fileNuevo.NewStyle(estilo)
// 		fileNuevo.SetCellStyle(sheetName, colLetter, "1", styles)
// 		// estilos = append(estilos, styles)
// 	}

// 	// Extraer valores de la primera fila
// 	var primeraFila []string
// 	primeraFila = append(primeraFila, filas[0]...)

// 	return fileNuevo, nil
// }
